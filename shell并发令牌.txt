tmp_fifofile=/tmp/$$.fifo
# 创建有名管道
[[ -e tmp_fifofile ]] || mkfifo $tmp_fifofile
# 创建文件描述符，以可读（<）可写（>）的方式关联管道文件，这时候文件描述符9就有了有名管道文件的所有特性
exec 9<>$tmp_fifofile
# 关联后的文件描述符拥有管道文件的所有特性,所以这时候管道文件可以删除，我们留下文件描述符来用就可以了
rm -rf $tmp_fifofile
# 并发线程数（总令牌数）
thread=20
for ((i = 0; i < $thread; i++)); do
        echo >&9 # &3代表引用文件描述符3，这条命令代表往管道里面放入了一个"令牌"
done

for url in $data; do
        read -u9 # 代表从管道中读取一个令牌
        {
                {
                        check_http
                        if [ $status_code -ne 200 ] && [ $status_code -ne 301 ]; then
                                echo -e $url 异常 状态码:$status_code ip:$ip TCP连接:$tcp_time's' DNS解析:$dns_time's' 总时间:$total_time's' url走向:$redirect  >>jc_result.log
                        fi
                } && delay
                echo >&9 # 命令执行完毕，把令牌放回管道
        } &
done

wait      # 等待上面的命令都执行完毕了再往下执行。
exec 9<&- # 关闭文件描述符的读
exec 9>&- # 关闭文件描述符的写
